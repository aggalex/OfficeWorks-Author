#!/usr/bin/env python2.7

import sys
from gi.repository import Gtk, Gdk, GdkPixbuf, Gio
from gi.repository import Granite
from os.path import expanduser
import os

def show_about(sender = None):
	about = Granite.WidgetsAboutDialog.new()
	about.set_program_name("OfficeWorks Author")
	about.set_comments("""A text editor, part of the OfficeWorks Suite.""")
#	icon = Gio.ThemedIcon(name="")
#	about.set_logo(Gtk.Image.new_from_gicon(icon, 64))
#	about.set_website("http://www.officeworks.org/products/author")
 	about.set_website_label("OfficeWorks website")
 	about.set_version("0.1")
	about.run()
	about.destroy()

def create_window():
  window = Gtk.Window.new(Gtk.WindowType.TOPLEVEL)
  window.set_position(Gtk.WindowPosition.CENTER)
  window.set_default_size(700, 600)
  create_headerbar(window)
  split_window(window)
  window.connect("delete-event", Gtk.main_quit)
  window.show_all()

def page_changed(sender, info):
	sender.set_page(info)

def create_headerbar(window):
  hb = Gtk.HeaderBar()
  hb.set_name("")
  hb.set_show_close_button(True)
  hb.props.title = ""
  
  mainbt = Gtk.Button()
  mainbt.set_name("mainbt")
  mainbt.set_property("width-request", 50)
  mainbt.set_property("height-request", 30)
  logopixbuf = GdkPixbuf.Pixbuf.new_from_file_at_scale("Icon.png", width=40, height=20, preserve_aspect_ratio=True)
  logo = Gtk.Image.new_from_pixbuf(logopixbuf)
  mainbt.add(logo)
  hb.pack_start(mainbt)
  
  vseparator = Gtk.Separator(orientation=Gtk.Orientation.VERTICAL)
  hb.pack_start(vseparator)
  
  new = Gtk.ToolButton()
  new.set_icon_name("document-new")
  hb.pack_start(new)
  
  undo = Gtk.ToolButton()
  undo.set_icon_name("undo")
  hb.pack_start(undo)
  
  redo = Gtk.ToolButton()
  redo.set_icon_name("redo")
  hb.pack_start(redo)
  
  printpg = Gtk.ToolButton()
  printpg.set_icon_name("document-print")
  hb.pack_start(printpg)
  
  printpg = Gtk.ToolButton()
  printpg.set_icon_name("document-print-preview")
  hb.pack_start(printpg)
  
  hbbgpixbuf = GdkPixbuf.Pixbuf.new_from_file_at_scale("headerbarbg.png", width=250, height=250, preserve_aspect_ratio=True)
  headerbarbg = Gtk.Image.new_from_pixbuf(hbbgpixbuf)
  hb.pack_end(headerbarbg)
  
  window.set_titlebar(hb)

def split_window(window):
  box = Gtk.VBox()
  paned = Gtk.Paned.new(Gtk.Orientation.HORIZONTAL)
  create_toolbox(paned)
  create_pageview(paned)
  paned.props.position = 220
  box.pack_start(paned, True, True, 0)
  window.add(box)

def create_toolbox(paned):
  toolbox = Gtk.VBox()
  
  SectionTitle = Gtk.Label("Home")
  SectionTitle.set_name("SectionTitle")
  toolbox.pack_start(SectionTitle, False, True, 0)
  
  formatbts = Gtk.VBox()
  fpainter = Gtk.Button()
  fpainter.set_property("width-request", 50)
  fpainter.set_property("height-request", 30)
  fpainter.set_property("label", "format painter")
  fclear = Gtk.Button()
  fclear.set_property("width-request", 50)
  fclear.set_property("height-request", 30)
  fclear.set_property("label", "Clear formatting")
  formatbts.pack_start(fpainter, False, False, 0)
  formatbts.pack_start(fclear, False, False, 0)
  toolbox.pack_start(formatbts, False, False, 4)
  formatbts.get_style_context().add_class("linked")
  
  toolseparator1 = Gtk.Separator(orientation=Gtk.Orientation.HORIZONTAL)
  toolbox.pack_start(toolseparator1, False, False, 20)
  
  fontbox = Gtk.VBox()
  fontentry = Gtk.Entry()
  fontentry.set_text("Open Sans")
  fontbox.pack_start(fontentry, False, False, 0)
  adjustment = Gtk.Adjustment(14, 0, 100, 1, 10, 0)
  sizeentry = Gtk.SpinButton()
  sizeentry.set_adjustment(adjustment)
  fontbox.pack_start(sizeentry, False, False, 0)
  fontbox.get_style_context().add_class("linked")
  toolbox.pack_start(fontbox, False, True, 4)
  
  stylebox = Gtk.HBox()
  stylebold = Gtk.ToggleButton()
  stylebold.set_active(False)
  imagebold = Gtk.Image.new_from_icon_name("format-text-bold-symbolic", Gtk.IconSize.BUTTON)
  stylebold.add(imagebold)
  #stylebold.connect("toggled", self.on_button_toggled, "1")
  stylebox.pack_start(stylebold, True, True, 0)
  styleitalics = Gtk.ToggleButton()
  styleitalics.set_active(False)
  imageitalics = Gtk.Image.new_from_icon_name("format-text-italic-symbolic", Gtk.IconSize.BUTTON)
  styleitalics.add(imageitalics)
  #styleitalics.connect("toggled", self.on_button_toggled, "1")
  stylebox.pack_start(styleitalics, True, True, 0)
  styleunderline = Gtk.ToggleButton()
  styleunderline.set_active(False)
  imageunderline = Gtk.Image.new_from_icon_name("format-text-underline-symbolic", Gtk.IconSize.BUTTON)
  styleunderline.add(imageunderline)
  #styleunderline.connect("toggled", self.on_button_toggled, "1")
  stylebox.pack_start(styleunderline, True, True, 0)
  stylestrikethrough = Gtk.ToggleButton()
  stylestrikethrough.set_active(False)
  imagestrikethrough = Gtk.Image.new_from_icon_name("format-text-strikethrough-symbolic", Gtk.IconSize.BUTTON)
  stylestrikethrough.add(imagestrikethrough)
  #stylestrikethrough.connect("toggled", self.on_button_toggled, "1")
  stylebox.pack_start(stylestrikethrough, True, True, 0)
  toolbox.pack_start(stylebox, False, True, 4);
  stylebox.get_style_context().add_class("linked")
  
  txtcolorbox = Gtk.HBox()
  txtcolorlabel = Gtk.Label("Text Color")
  txtcolorentry = Gtk.ColorButton(color=Gdk.Color(0,0,0))
  txtcolorbox.pack_start(txtcolorlabel, False, False, 2)
  txtcolorbox.pack_end(txtcolorentry, False, False, 2)
  toolbox.pack_start(txtcolorbox, False, True, 4)
  
  hlcolorbox = Gtk.HBox()
  hlcolorlabel = Gtk.Label("Highlight Color")
  hlcolorentry = Gtk.ColorButton(color=Gdk.Color(65535,65535,65535))
  hlcolorbox.pack_start(hlcolorlabel, False, False, 2)
  hlcolorbox.pack_end(hlcolorentry, False, False, 2)
  toolbox.pack_start(hlcolorbox, False, True, 4)
  
  toolseparator2 = Gtk.Separator(orientation=Gtk.Orientation.HORIZONTAL)
  toolbox.pack_start(toolseparator2, False, False, 20)
  
  alignbox = Gtk.HBox()
  alignleft = Gtk.RadioButton.new_from_widget(None)
  imageleft = Gtk.Image.new_from_icon_name("format-justify-left-symbolic", Gtk.IconSize.BUTTON)
  alignleft.props.draw_indicator = False
  alignleft.add(imageleft)
  #alignleft.connect("toggled", self.on_button_toggled, "1")
  alignbox.pack_start(alignleft, True, True, 0)
  aligncenter = Gtk.RadioButton.new_from_widget(alignleft)
  imagecenter = Gtk.Image.new_from_icon_name("format-justify-center-symbolic", Gtk.IconSize.BUTTON)
  aligncenter.props.draw_indicator = False
  aligncenter.add(imagecenter)
  #aligncenter.connect("toggled", self.on_button_toggled, "1")
  alignbox.pack_start(aligncenter, True, True, 0)
  alignright = Gtk.RadioButton.new_from_widget(alignleft)
  imagenone = Gtk.Image.new_from_icon_name("format-justify-left-symbolic", Gtk.IconSize.BUTTON)
  alignright.props.draw_indicator = False
  alignright.add(imagenone)
  #alignright.connect("toggled", self.on_button_toggled, "1")
  alignbox.pack_start(alignright, True, True, 0)
  alignfill = Gtk.RadioButton.new_from_widget(alignleft)
  imagefill = Gtk.Image.new_from_icon_name("format-justify-fill-symbolic", Gtk.IconSize.BUTTON)
  alignfill.props.draw_indicator = False
  alignfill.add(imagefill)
  #alignfill.connect("toggled", self.on_button_toggled, "1")
  alignbox.pack_start(alignfill, True, True, 0)
  toolbox.pack_start(alignbox, False, True, 4)
  alignbox.get_style_context().add_class("linked")
  
  listbox = Gtk.HBox()
  listbulleted = Gtk.RadioButton.new_from_widget(None)
  imagebulleted = Gtk.Image.new_from_icon_name("view-more-symbolic", Gtk.IconSize.BUTTON)
  listbulleted.props.draw_indicator = False
  listbulleted.add(imagebulleted)
  #listbulleted.connect("toggled", self.on_button_toggled, "1")
  listbox.pack_start(listbulleted, True, True, 0)
  listnumbered = Gtk.RadioButton.new_from_widget(listbulleted)
  listnumbered.set_label("1. 2. 3.")
  listnumbered.props.draw_indicator = False
  #listnumbered.connect("toggled", self.on_button_toggled, "1")
  listbox.pack_start(listnumbered, True, True, 0)
  listnone = Gtk.RadioButton.new_from_widget(listbulleted)
  listnone.set_active(True)
  imagenone = Gtk.Image.new_from_icon_name("action-unavailable-symbolic", Gtk.IconSize.BUTTON)
  listnone.props.draw_indicator = False
  listnone.add(imagenone)
  #listnone.connect("toggled", self.on_button_toggled, "1")
  listbox.pack_start(listnone, True, True, 0)
  listbox.get_style_context().add_class("linked")
  toolbox.pack_start(listbox, False, True, 4)
  
  indentbox = Gtk.HBox()
  indentless = Gtk.Button()
  imageindentless = Gtk.Image.new_from_icon_name("format-indent-less-symbolic", Gtk.IconSize.BUTTON)
  indentless.add(imageindentless)
  indentbox.pack_start(indentless, True, True, 0)
  indentmore = Gtk.Button()
  imageindentmore = Gtk.Image.new_from_icon_name("format-indent-more-symbolic", Gtk.IconSize.BUTTON)
  indentmore.add(imageindentmore)
  indentbox.pack_start(indentmore, True, True, 0)
  toolbox.pack_start(indentbox, False, True, 4)
  indentbox.get_style_context().add_class("linked")
  
  shadingcolorbox = Gtk.HBox()
  shadingcolorlabel = Gtk.Label("Shading Color")
  shadingcolorentry = Gtk.ColorButton(color=Gdk.Color(65535,65535,65535))
  shadingcolorbox.pack_start(shadingcolorlabel, False, False, 2)
  shadingcolorbox.pack_end(shadingcolorentry, False, False, 2)
  toolbox.pack_start(shadingcolorbox, False, True, 4)
  
  toolseparator2 = Gtk.Separator(orientation=Gtk.Orientation.HORIZONTAL)
  toolbox.pack_start(toolseparator2, False, False, 20)
  
  Stylebox = Gtk.VBox()
  style1 = Gtk.Button()
  style1.set_property("height-request", 100)
  Stylebox.pack_start(style1, False, True, 0)
  Labelbox1 = Gtk.VBox()
  EgLabel1 = Gtk.Label()
  EgLabel1.set_markup("<b><big><big><big>AaBbCcDdEe...</big></big></big></b>")
  Labelbox1.pack_start(EgLabel1, True, True, 10)
  NameLabel1 = Gtk.Label("Title Style")
  Labelbox1.pack_start(NameLabel1, True, True, 10)
  style1.add(Labelbox1)
  style2 = Gtk.Button()
  style2.set_property("height-request", 100)
  Stylebox.pack_start(style2, False, True, 0)
  Labelbox2 = Gtk.VBox()
  EgLabel2 = Gtk.Label()
  EgLabel2.set_markup("<i><big><big>AaBbCcDdEe...</big></big></i>")
  Labelbox2.pack_start(EgLabel2, True, True, 10)
  NameLabel2 = Gtk.Label("Subtitle Style")
  Labelbox2.pack_start(NameLabel2, True, True, 10)
  style2.add(Labelbox2)
  style3 = Gtk.Button()
  style3.set_property("height-request", 100)
  Stylebox.pack_start(style3, False, True, 0)
  Labelbox3 = Gtk.VBox()
  EgLabel3 = Gtk.Label()
  EgLabel3.set_markup("AaBbCcDdEe...")
  Labelbox3.pack_start(EgLabel3, True, True, 10)
  NameLabel3 = Gtk.Label("Normal Style")
  Labelbox3.pack_start(NameLabel3, True, True, 10)
  style3.add(Labelbox3)
  morestyles = Gtk.Button()
  morestyles.set_property("height-request", 30)
  morestyles.set_property("label", "More Styles")
  Stylebox.pack_start(morestyles, False, True, 0)
  toolbox.pack_start(Stylebox, False, True, 4)
  Stylebox.get_style_context().add_class("linked")

  toolseparator2 = Gtk.Separator(orientation=Gtk.Orientation.HORIZONTAL)
  toolbox.pack_start(toolseparator2, False, False, 20)

  FRBox = Gtk.VBox()
  findentry = Gtk.Entry()
  findentry.set_text("Find...")
  replaceentry = Gtk.Entry()
  replaceentry.set_text("Replace...")
  replacebutton = Gtk.Button(label="replace")
  replacebutton.set_property("height-request", 30)
  FRBox.pack_start(findentry, False, True, 0)
  FRBox.pack_start(replaceentry, False, True, 0)
  FRBox.pack_start(replacebutton, False, True, 0)
  FRBox.get_style_context().add_class("linked")
  toolbox.pack_start(FRBox, False, True, 4)
  
  toolspacer = Gtk.HBox()
  toolspacer.pack_start(toolbox, True, True, 10)
  scroll = Gtk.ScrolledWindow()
  scroll.add_with_viewport(toolspacer)
  paned.add1(scroll)

def create_pageview(paned):
  welcome = Granite.WidgetsWelcome.new('Not implemented yet!', '*Sad face :(*')
  paned.add2(welcome)

cssProvider = Gtk.CssProvider()
cssProvider.load_from_path('style.css')
screen = Gdk.Screen.get_default()
styleContext = Gtk.StyleContext()
styleContext.add_provider_for_screen(screen, cssProvider,
Gtk.STYLE_PROVIDER_PRIORITY_USER)

home = expanduser("~")
create_window()
Gtk.main()
